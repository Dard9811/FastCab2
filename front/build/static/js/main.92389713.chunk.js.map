{"version":3,"sources":["components/Bienvenida/logo.svg","components/NavBar/user.svg","components/DetalleServicio/user.svg","components/DetalleServicio/whatsapp.svg","components/Bienvenida/Bienvenida.jsx","components/IniciarSesion/IniciarSesion.jsx","components/CrearCuenta/CrearCuenta.jsx","components/NavBar/NavBar.jsx","components/ListaViajes/ListaViajes.jsx","components/GoogleMap/GoogleMap.jsx","components/DetalleServicio/DetalleServicio.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Bienvenida","props","className","src","Logo","alt","onClick","history","push","pathname","IniciarSesion","placeholder","type","goBack","CrearCuenta","nombre","cedula","placa","modelo","contraseña","onChange","e","target","value","newUser","usuario","foto","fetch","method","body","JSON","stringify","headers","then","res","json","data","console","log","user","token","catch","error","handleCrear","ListaViajes","href","icon","withRouter","Fragment","viajes","map","viaje","key","_id","direccion","conductor","carro","estado","handleAccept","SimpleMap","maps","geocoder","Geocoder","newLat","this","lat","newLon","lon","geocode","address","results","status","geometry","location","lng","Marker","position","title","panTo","style","height","width","bootstrapURLKeys","defaultCenter","defaultZoom","onGoogleApiLoaded","renderMarkers","yesIWantToUseGoogleMapApiInternals","Component","DetalleServicio","numero","userImage","GoogleMap","split","whatsappIcon","handleLlegue","handleRecoger","handleTerminar","handleCancelar","App","useState","viajesNuevos","setViajesNuevos","useEffect","ws","WebSocket","onopen","onmessage","msg","parse","err","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92389713.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.daf321ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.b171ffca.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.31aa4220.svg\";","module.exports = __webpack_public_path__ + \"static/media/whatsapp.3a8a5d44.svg\";","import React from \"react\";\r\nimport \"./Bienvenida.css\";\r\nimport Logo from \"./logo.svg\";\r\n\r\nfunction Bienvenida(props) {\r\n  let handleIniciarSesion = () => {\r\n    props.history.push({\r\n      pathname: \"/iniciarsesion\"\r\n    });\r\n  };\r\n  let handleRegistrarse = () => {\r\n    props.history.push({\r\n      pathname: \"/crearcuenta\"\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"centerPage container\">\r\n      <img className=\"logo\" src={Logo} alt=\"logo\" />\r\n      <h1>¡Bienvenido a FastCab!</h1>\r\n      <div className=\"row justify-content-center\">\r\n        <button\r\n          className=\"botonAmarilloChiquito margen\"\r\n          onClick={() => handleIniciarSesion()}\r\n        >\r\n          Iniciar Sesion\r\n        </button>\r\n        <button\r\n          className=\"botonGrisChiquito margen\"\r\n          onClick={() => handleRegistrarse()}\r\n        >\r\n          Crear Cuenta\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Bienvenida;\r\n","import React from \"react\";\r\nimport \"./IniciarSesion.css\";\r\n\r\nfunction IniciarSesion(props) {\r\n  let handleIniciarSesion = () => {\r\n    props.history.push({\r\n      pathname: \"/viajes\"\r\n    });\r\n  };\r\n  let handleRegresar = () => {\r\n    props.history.goBack();\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"titulo\">\r\n        <h1>Iniciar Sesion</h1>\r\n      </div>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label>Nombre su Usuario</label>\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese el nombre de usuario\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Contraseña</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese su contraseña\"\r\n          />\r\n        </div>\r\n      </form>\r\n      <div className=\"row justify-content-center\">\r\n        <button\r\n          className=\"botonAmarilloChiquito margen\"\r\n          onClick={() => handleIniciarSesion()}\r\n        >\r\n          Iniciar Sesion\r\n        </button>\r\n        <button\r\n          className=\"botonGrisChiquito margen\"\r\n          onClick={() => handleRegresar()}\r\n        >\r\n          Regresar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IniciarSesion;\r\n","import React from \"react\";\r\nimport \"./CrearCuenta.css\";\r\n\r\nfunction CrearCuenta(props) {\r\n  let nombre = \"\";\r\n  let cedula = \"\";\r\n  let placa = \"\";\r\n  let modelo = \"\";\r\n  let foto = \"\";\r\n  let contraseña = \"\";\r\n\r\n  let handleCrear = () => {\r\n    let newUser = {\r\n      usuario: nombre,\r\n      cedula: cedula,\r\n      placa: placa,\r\n      modelo: modelo,\r\n      foto: foto,\r\n      contraseña: contraseña\r\n    };\r\n\r\n    fetch(\"auth/create\", {\r\n      method: \"POST\", // or 'PUT'\r\n      body: JSON.stringify(newUser),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => {\r\n        res.json().then(data => {\r\n          console.log(data);\r\n          props.history.push({\r\n            pathname: \"/viajes\",\r\n            user: data.usuario,\r\n            token: data.token\r\n          });\r\n        });\r\n      })\r\n      .catch(error => console.log(\"Error:\", error));\r\n  };\r\n  let handleRegresar = () => {\r\n    props.history.goBack();\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"titulo2\">\r\n        <h1>Crear Cuenta</h1>\r\n      </div>\r\n      <form>\r\n        <div className=\"form-group\">\r\n          <label>Nombre de Usuario</label>\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese un nombre de usuario\"\r\n            onChange={e => (nombre = e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Cedula</label>\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese su cedula\"\r\n            onChange={e => (cedula = e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Placa</label>\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese la placa de su vehiculo\"\r\n            onChange={e => (placa = e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Modelo del Vehiculo</label>\r\n          <input\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese el modelo de su vehiculo\"\r\n            onChange={e => (modelo = e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Foto de Perfil</label>\r\n          <input type=\"file\" className=\"form-control-file\" />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Contraseña</label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            placeholder=\"Ingrese una contraseña\"\r\n            onChange={e => (contraseña = e.target.value)}\r\n          />\r\n        </div>\r\n      </form>\r\n      <div className=\"row justify-content-center\">\r\n        <button\r\n          className=\"botonAmarilloChiquito margen\"\r\n          onClick={() => handleCrear()}\r\n        >\r\n          Crear Cuenta\r\n        </button>\r\n        <button\r\n          className=\"botonGrisChiquito margen\"\r\n          onClick={() => handleRegresar()}\r\n        >\r\n          Regresar\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CrearCuenta;\r\n","import React from \"react\";\r\nimport \"./NavBar.css\";\r\nimport icon from \"./user.svg\";\r\n\r\nfunction ListaViajes(props) {\r\n  return (\r\n    <div className=\"navBar\">\r\n      <a href=\"miPerfil\">\r\n        <img className=\"iconoUser\" src={icon} alt=\"user icon\" />\r\n      </a>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ListaViajes;\r\n","import React from \"react\";\r\nimport NavBar from \"../NavBar/NavBar\";\r\nimport \"./ListaViajes.css\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nfunction ListaViajes(props) {\r\n  let handleAccept = viaje => {\r\n    fetch(\"taxistas/accept\", {\r\n      method: \"POST\", // or 'PUT'\r\n      body: JSON.stringify({\r\n        viaje: viaje,\r\n        conductor: JSON.stringify({\r\n          nombre: \"Francisco Devia\",\r\n          cedula: \"19431215\",\r\n          placa: \"RGU-429\",\r\n          carro: \"Chevrolet Spark\"\r\n        })\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => console.log(\"Exito\", res))\r\n      .catch(error => console.log(\"Error:\", error));\r\n    viaje.estado = \"confirmado\";\r\n    props.history.push({\r\n      pathname: \"/servicio\",\r\n      viaje: viaje\r\n    });\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <NavBar />\r\n      <div className=\"container\">\r\n        {props.viajes.map(viaje => (\r\n          <div className=\"card shadow\" key={viaje._id}>\r\n            <div className=\"card-body\">\r\n              <h4 className=\"card-title\">{viaje.direccion}</h4>\r\n              <button\r\n                className=\"botonAmarillo\"\r\n                onClick={() => handleAccept(viaje)}\r\n              >\r\n                Aceptar\r\n              </button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default withRouter(ListaViajes);\r\n","import React, { Component } from \"react\";\r\nimport GoogleMapReact from \"google-map-react\";\r\n\r\nclass SimpleMap extends Component {\r\n  renderMarkers(map, maps) {\r\n    const geocoder = new maps.Geocoder();\r\n    let newLat = this.props.lat;\r\n    let newLon = this.props.lon;\r\n    geocoder.geocode({ address: this.props.direccion }, (results, status) => {\r\n      if (status === \"OK\") {\r\n        newLat = results[0].geometry.location.lat();\r\n        newLon = results[0].geometry.location.lng();\r\n      }\r\n      new maps.Marker({\r\n        position: { lat: newLat, lng: newLon },\r\n        map,\r\n        title: \"Hello World!\"\r\n      });\r\n\r\n      map.panTo({ lat: newLat, lng: newLon });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      // Important! Always set the container height explicitly\r\n      <div style={{ height: \"50vh\", width: \"100%\" }}>\r\n        <GoogleMapReact\r\n          bootstrapURLKeys={{ key: \"AIzaSyBQGovuMsVwP-HAiTWrNAVND5JfnikoPZ8\" }}\r\n          defaultCenter={{ lat: this.props.lat, lng: this.props.lon }}\r\n          defaultZoom={17}\r\n          onGoogleApiLoaded={({ map, maps }) => this.renderMarkers(map, maps)}\r\n          yesIWantToUseGoogleMapApiInternals={true}\r\n        ></GoogleMapReact>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SimpleMap;\r\n","import React from \"react\";\r\nimport GoogleMap from \"../GoogleMap/GoogleMap\";\r\nimport \"./DetalleServicio.css\";\r\nimport userImage from \"./user.svg\";\r\nimport whatsappIcon from \"./whatsapp.svg\";\r\n\r\nfunction DetalleServicio(props) {\r\n  let viaje = props.location.viaje || {\r\n    direccion: \"Universidad de los Andes\",\r\n    estado: \"en curso\",\r\n    usuario: \"Mateo Devia\",\r\n    numero: \"whatsapp:+573132803320\"\r\n  };\r\n  let handleRecoger = viaje => {\r\n    fetch(\"taxistas/recoger\", {\r\n      method: \"POST\", // or 'PUT'\r\n      body: JSON.stringify({\r\n        viaje: viaje,\r\n        conductor: JSON.stringify({\r\n          nombre: \"Francisco Devia\",\r\n          cedula: \"19431215\",\r\n          placa: \"RGU-429\",\r\n          carro: \"Chevrolet Spark\"\r\n        })\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => console.log(\"Exito\", res))\r\n      .catch(error => console.log(\"Error:\", error));\r\n    viaje.estado = \"en curso\";\r\n  };\r\n\r\n  let handleLlegue = viaje => {\r\n    fetch(\"taxistas/llegue\", {\r\n      method: \"POST\", // or 'PUT'\r\n      body: JSON.stringify({\r\n        viaje: viaje,\r\n        conductor: JSON.stringify({\r\n          nombre: \"Francisco Devia\",\r\n          cedula: \"19431215\",\r\n          placa: \"RGU-429\",\r\n          carro: \"Chevrolet Spark\"\r\n        })\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => console.log(\"Exito\", res))\r\n      .catch(error => console.log(\"Error:\", error));\r\n    viaje.estado = \"esperando\";\r\n  };\r\n\r\n  let handleTerminar = viaje => {\r\n    fetch(\"taxistas/terminar\", {\r\n      method: \"POST\", // or 'PUT'\r\n      body: JSON.stringify({\r\n        viaje: viaje,\r\n        conductor: JSON.stringify({\r\n          nombre: \"Francisco Devia\",\r\n          cedula: \"19431215\",\r\n          placa: \"RGU-429\",\r\n          carro: \"Chevrolet Spark\"\r\n        })\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => console.log(\"Exito\", res))\r\n      .catch(error => console.log(\"Error:\", error));\r\n    viaje.estado = \"en curso\";\r\n    props.history.goBack();\r\n  };\r\n\r\n  let handleCancelar = viaje => {\r\n    fetch(\"taxistas/cancelar\", {\r\n      method: \"POST\", // or 'PUT'\r\n      body: JSON.stringify({\r\n        viaje: viaje,\r\n        conductor: JSON.stringify({\r\n          nombre: \"Francisco Devia\",\r\n          cedula: \"19431215\",\r\n          placa: \"RGU-429\",\r\n          carro: \"Chevrolet Spark\"\r\n        })\r\n      }),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(res => console.log(\"Exito\", res))\r\n      .catch(error => console.log(\"Error:\", error));\r\n    viaje.estado = \"en curso\";\r\n    props.history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <img className=\"fotoUsuario\" src={userImage} alt=\"user icon\" />\r\n        <h1 className=\"nombreUsuario\">{viaje.usuario}</h1>\r\n      </div>\r\n      <h2>{viaje.direccion}</h2>\r\n      <GoogleMap\r\n        lat={5.6984895}\r\n        lon={-74.03693240000001}\r\n        direccion={viaje.direccion}\r\n      />\r\n      <a href={\"https://wa.me/\" + viaje.numero.split(\"whatsapp:+\")[1]}>\r\n        <div className=\"row\">\r\n          <div className=\"circuloverde\">\r\n            <img className=\"iconoWhatsapp\" src={whatsappIcon} alt=\"user icon\" />\r\n          </div>\r\n          <h4 className=\"textoBoton\">Enviar mensaje a Whatsapp</h4>\r\n        </div>\r\n      </a>\r\n      {viaje.estado === \"confirmado\" && (\r\n        <button\r\n          className=\"botonAmarillo margen\"\r\n          onClick={() => handleLlegue(viaje)}\r\n        >\r\n          Ya llegué\r\n        </button>\r\n      )}\r\n      {viaje.estado === \"esperando\" && (\r\n        <button\r\n          className=\"botonAmarillo margen\"\r\n          onClick={() => handleRecoger(viaje)}\r\n        >\r\n          Ya recogí al usuario\r\n        </button>\r\n      )}\r\n      {viaje.estado === \"en curso\" && (\r\n        <button\r\n          className=\"botonAmarillo margen\"\r\n          onClick={() => handleTerminar(viaje)}\r\n        >\r\n          Terminar Recorrido\r\n        </button>\r\n      )}\r\n      <button\r\n        className=\"botonGris margen\"\r\n        onClick={() => handleCancelar(viaje)}\r\n      >\r\n        Cancelar Viaje\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DetalleServicio;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Bienvenida from \"./components/Bienvenida/Bienvenida\";\r\nimport IniciarSesion from \"./components/IniciarSesion/IniciarSesion\";\r\nimport CrearCuenta from \"./components/CrearCuenta/CrearCuenta\";\r\nimport ListaViajes from \"./components/ListaViajes/ListaViajes\";\r\nimport DetalleServicio from \"./components/DetalleServicio/DetalleServicio\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nfunction App() {\r\n  const [viajesNuevos, setViajesNuevos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const ws = new WebSocket(\"wss://taxis-whatsapp.herokuapp.com\");\r\n\r\n    //abre el socket\r\n    ws.onopen = () => {\r\n      console.log(\"open my ws\");\r\n      ws.onmessage = msg => {\r\n        setViajesNuevos(JSON.parse(msg.data));\r\n      };\r\n    };\r\n\r\n    //pide los viajes nuevos\r\n    fetch(\"data\")\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        if (data.err) {\r\n          console.log(JSON.stringify(data.err));\r\n        } else {\r\n          setViajesNuevos(data);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            component={props => (\r\n              <Bienvenida history={props.history} location={props.location} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/iniciarsesion\"\r\n            component={props => (\r\n              <IniciarSesion\r\n                history={props.history}\r\n                location={props.location}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/crearcuenta\"\r\n            component={props => (\r\n              <CrearCuenta history={props.history} location={props.location} />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/viajes\"\r\n            component={props => (\r\n              <ListaViajes\r\n                viajes={viajesNuevos}\r\n                history={props.history}\r\n                location={props.location}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            path=\"/servicio\"\r\n            component={props => (\r\n              <DetalleServicio\r\n                history={props.history}\r\n                location={props.location}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}